---
  - name: Wait for controller-instance creation to complete
    async_status: jid={{ item.ansible_job_id }}
    register: controller_jobs
    until: controller_jobs.finished
    retries: 300
    with_items: "{{ controller_instances.results }}"



  - name: stop instance controllers
    os_server_actions:
       auth:
         auth_url: "{{ os_auth }}"
         username: "{{ project_name }}"
         password: "{{ project_password }}"
         project_name: "{{ project_name }}"
       action: stop
       validate_certs: False
       server: controller{{ item }}
    async: 45
    poll: 0
    with_sequence:
       count="{{ controller_count }}"


  - name: Wait for compute-instance creation to complete
    async_status: jid={{ item.ansible_job_id }}
    register: compute_jobs
    until: compute_jobs.finished
    retries: 300
    with_items: "{{ compute_instances.results }}"


  - name: stop instance computes
    os_server_actions:
       auth:
         auth_url: "{{ os_auth }}"
         username: "{{ project_name }}"
         password: "{{ project_password }}"
         project_name: "{{ project_name }}"
       action: stop
       validate_certs: False
       server: compute{{ item }}
    async: 45
    poll: 0
    with_sequence:
       count="{{ compute_count }}"



  - name: Wait for ceph-instance creation to complete
    async_status: jid={{ item.ansible_job_id }}
    register: ceph_jobs
    until: ceph_jobs.finished
    retries: 300
    with_items: "{{ ceph_instances.results }}"



  - name: stop instance ceph
    os_server_actions:
       auth:
         auth_url: "{{ os_auth }}"
         username: "{{ project_name }}"
         password: "{{ project_password }}"
         project_name: "{{ project_name }}"
       action: stop
       validate_certs: False
       server: ceph{{ item }}
    async: 45
    poll: 0
    register: ceph_stop
    with_sequence:
       count="{{ ceph_count }}"



  - name: Wait for hci-instance creation to complete
    async_status: jid={{ item.ansible_job_id }}
    register: hci_jobs
    until: hci_jobs.finished
    retries: 300
    with_items: "{{ hci_instances.results }}"



  - name: stop instance hci
    os_server_actions:
       auth:
         auth_url: "{{ os_auth }}"
         username: "{{ project_name }}"
         password: "{{ project_password }}"
         project_name: "{{ project_name }}"
       action: stop
       validate_certs: False
       server: hci{{ item }}
    async: 45
    poll: 0
    register: hci_stop
    with_sequence:
       count="{{ hci_count }}"


