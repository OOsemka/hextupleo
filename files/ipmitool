#!/bin/bash
# This is hacky ipmitool that allows to take advantage of ironic power functionality with OpenStack instances on undercloud
# Format for imported nodes to ironic via instackenv.json needs to be as follows:
#{
#    "nodes":[
#        {
#            "mac":[
#                "fa:16:3e:9f:d8:48"
#            ],
#            "cpu":"4",
#            "memory":"6144",
#            "disk":"40",
#            "arch":"x86_64",
#            "pm_type":"pxe_ipmitool",
#            "name":"controller1",
#            "capabilities": "profile:controller",
#            "pm_user":"test",
#            "pm_password":"Passw0rd",
#            "pm_addr":"https://10.9.65.100:13000/v2.0/controller1"
#
#        }
#    ]
#}
#######################################
#
# pm_user - is both OpenStack user and Tenant
# pm_password - is a password for the OpenStack user
# pm_addr - is a combination of keystone public endpoint and the name of instance at the end - controller in this case
#######################################



while getopts ":I:H:L:U:B:b:T:t:R:N:f:" opt; do
  case $opt in
    I) ;;
    H)
      pm_addr=$OPTARG
      ;;
    L) ;;
    U)
      pm_user=$OPTARG
      ;;
    B|b)
      ;;
    T|t)
      ;;
    R) ;;
    N) ;;
    f)
      pm_password=$(cat $OPTARG)
      ;;
  esac
done
shift $((OPTIND-1))
operation="$*"
auth_url=`echo "$pm_addr" | sed 's%/[^/]*$%/%'`
node=`echo "$pm_addr" |  awk -F'/' '{print $5}'`

# Debug section
#echo "pm_addr $pm_addr"
#echo "pm_user $pm_user"
#echo "pm_password $pm_password"
#echo "operation $operation"
#echo "auth_url $auth_url"
#echo "node $node"
#######################

if [ "${operation}" == "power status" ] ; then
	status=$(openstack --os-auth-url ${auth_url} --os-project-name ${pm_user} --os-username ${pm_user} --os-password ${pm_password} --insecure server show ${node} | grep status | awk {'print $4'} | sed 's/SHUTOFF/Chassis Power is off/g' |  sed 's/ACTIVE/Chassis Power is on/g')
	echo $status
elif [ "${operation}" == "power on" ] ; then
	openstack --os-auth-url ${auth_url} --os-project-name ${pm_user} --os-username ${pm_user} --os-password ${pm_password} --insecure server start ${node}
	echo "Chassis Power Control: Up/On"
elif [ "${operation}" == "power off" ] ; then
	openstack --os-auth-url ${auth_url} --os-project-name ${pm_user} --os-username ${pm_user} --os-password ${pm_password} --insecure server stop ${node}
	echo "Chassis Power Control: Down/Off"
fi

